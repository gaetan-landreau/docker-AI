FROM nvidia/cuda:11.7.1-cudnn8-devel-ubuntu22.04 


# 11.3.1-cudnn8-devel-ubuntu22.04

ARG DEBIAN_FRONTEND=noninteractive
ARG COLMAP_VERSION=dev
ARG CUDA_ARCHITECTURES=native
ENV QT_XCB_GL_INTEGRATION=xcb_egl


# Minimal required libs + Python3.8 
RUN apt-get update \
    && apt-get install -y zlib1g-dev \
    && apt-get install -y software-properties-common \ 
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get install -y python3.9 python3.9-dev python3-pip python3-distutils python3-setuptools \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 \
    && update-alternatives --set python /usr/bin/python3.9 \
    && python -m pip install --upgrade pip \

    #Install basic utilities.
    && apt install -qy libglib2.0-0 \
    && apt install -y openssh-server \
    && apt-get install ffmpeg libsm6 libxext6 -y \     
    && apt-get install -y --no-install-recommends git wget curl gcc g++ cmake unzip bzip2 build-essential ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* 


# Install Cmake latest version. 
RUN rm -rf /var/lib/apt/lists/* \
    && wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-Linux-x86_64.sh \
    -q -O /tmp/cmake-install.sh \
    && chmod u+x /tmp/cmake-install.sh \
    && mkdir /opt/cmake-3.24.1 \
    && /tmp/cmake-install.sh --skip-license --prefix=/opt/cmake-3.24.1 \
    && rm /tmp/cmake-install.sh \
    && ln -s /opt/cmake-3.24.1/bin/* /usr/local/bin



RUN pip install ninja
# Prepare and empty machine for building.
RUN apt-get install -y ninja-build \
    && libboost-program-options-dev \
    && libboost-filesystem-dev \
    && libboost-graph-dev \
    && libboost-system-dev \
    && libboost-test-dev \
    && libeigen3-dev \
    && libflann-dev \
    && libfreeimage-dev \
    && libmetis-dev \
    && libgoogle-glog-dev \
    && libgflags-dev \
    && libsqlite3-dev \
    && libglew-dev \
    && qtbase5-dev \
    && libqt5opengl5-dev \
    && libcgal-dev \
    && libceres-dev

# Install Colmap. 
# Build and install COLMAP.
RUN git clone https://github.com/colmap/colmap.git
RUN cd colmap && \
    git reset --hard ${COLMAP_VERSION} && \
    mkdir build && \
    cd build && \
    cmake .. -GNinja -DCMAKE_CUDA_ARCHITECTURES=${CUDA_ARCHITECTURES} && \
    ninja && \
    ninja install && \
    cd .. && rm -rf colmap

# Install some basic libs. 
COPY requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir -r /tmp/requirements.txt \
    && rm -r /tmp/requirements.txt 
